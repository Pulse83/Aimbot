local UIS = game:GetService("UserInputService")
local Players = game:GetService("Players")
local Camera = game:GetService("Workspace").CurrentCamera
local LocalPlayer = Players.LocalPlayer
local RunService = game:GetService("RunService")
local StarterGui = game:GetService("StarterGui")
local Mouse = LocalPlayer:GetMouse()

local aimbotEnabled = false
local lockedPlayer = nil
local autoShootEnabled = true
local highlightFolder = Instance.new("Folder", game.CoreGui)
highlightFolder.Name = "AimbotHighlights"

StarterGui:SetCore("SendNotification", {
    Title = "Aimbot Info",
    Text = "Press Z to toggle the aimbot ON/OFF.\nMade by @Pulse",
    Duration = 10
})

local function getScreenDistance(position)
    local viewportPoint, onScreen = Camera:WorldToViewportPoint(position)
    if not onScreen then
        return math.huge
    end

    local screenCenter = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y / 2)
    local screenPosition = Vector2.new(viewportPoint.X, viewportPoint.Y)
    return (screenPosition - screenCenter).Magnitude
end

local function isEnemy(player)
    if LocalPlayer.Team and player.Team then
        return LocalPlayer.Team ~= player.Team
    end
    return true
end

local function findClosestPlayer()
    local closestPlayer = nil
    local closestDistance = math.huge

    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and isEnemy(player) and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local distance = getScreenDistance(player.Character.HumanoidRootPart.Position)
            if distance < closestDistance then
                closestDistance = distance
                closestPlayer = player
            end
        end
    end

    return closestPlayer
end

local function applyHighlight(player)
    if player and player.Character then
        local highlight = highlightFolder:FindFirstChild(player.Name) or Instance.new("Highlight")
        highlight.Name = player.Name
        highlight.Adornee = player.Character
        highlight.FillColor = Color3.new(1, 0, 0)
        highlight.OutlineTransparency = 1
        highlight.Parent = highlightFolder
    end
end

local function removeHighlight(player)
    if player and highlightFolder:FindFirstChild(player.Name) then
        highlightFolder[player.Name]:Destroy()
    end
end

local function lockOntoPlayer(player)
    if player and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
        if lockedPlayer then
            removeHighlight(lockedPlayer)
        end
        lockedPlayer = player
        applyHighlight(player)
    end
end

local function hasClearLineOfSight(targetPosition)
    local origin = Camera.CFrame.Position
    local direction = (targetPosition - origin).Unit * 500
    local ray = Ray.new(origin, direction)
    local hit, hitPosition = workspace:FindPartOnRay(ray, LocalPlayer.Character)

    if hit and hit:IsDescendantOf(lockedPlayer.Character) then
        return true
    end
    return false
end

local function shoot()
    if autoShootEnabled and lockedPlayer and lockedPlayer.Character and lockedPlayer.Character:FindFirstChild("HumanoidRootPart") then
        local targetPosition = lockedPlayer.Character.HumanoidRootPart.Position
        if hasClearLineOfSight(targetPosition) then
            mouse1click()
        end
    end
end

UIS.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    if input.KeyCode == Enum.KeyCode.Z then
        aimbotEnabled = not aimbotEnabled
        if aimbotEnabled then
            local closestPlayer = findClosestPlayer()
            if closestPlayer then
                lockOntoPlayer(closestPlayer)
            end
        else
            removeHighlight(lockedPlayer)
            lockedPlayer = nil
        end
    end
end)

RunService.RenderStepped:Connect(function()
    if aimbotEnabled and lockedPlayer and lockedPlayer.Character and lockedPlayer.Character:FindFirstChild("HumanoidRootPart") then
        local targetPosition = lockedPlayer.Character.HumanoidRootPart.Position
        Camera.CFrame = CFrame.new(Camera.CFrame.Position, targetPosition)
        shoot()
    end
end)
